<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<bean class="org.springframework.batch.test.JobLauncherTestUtils" />

	<!-- Actual Job -->
    <batch:job id="reportJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="mongodbItemReader" processor="reportProcessor" writer="cvsFileItemWriter" commit-interval="1">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>
    
    <bean id="reportProcessor" class="com.mkyong.model.ReportProcessor" />

	<!-- Mongo Item Reader -->
    <bean id="mongodbItemReader" class="org.springframework.batch.item.data.MongoItemReader">
        <property name="template" ref="mongoTemplate" />
        <property name="collection" value="report" />
        <property name="targetType" value="com.mkyong.model.Report" /> <!-- IMP -->
        <property name="query" value="{'_id':{$gt:0} }" />
        <property name="sort">
        	<util:map>
        		 <entry key="id" value="#{T(org.springframework.data.domain.Sort.Direction).ASC}" /> 
        	</util:map>
        </property>
    </bean>

	<bean id="cvsFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this csv file -->
		<property name="resource" value="file:cvs/report.csv" />
		<property name="shouldDeleteIfExists" value="true" />
		
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <!-- <property name="names" value="id, date, impression,clicks,earning" /> -->
                        <property name="names" value="id,impression,clicks,earning,date" />
                    </bean>
				</property>
				<!-- <property name="format" value="%d,%s,%s,%.2f,%ta %tb %td %tT %tZ %tY" /> -->
				<property name="format" value="%d,%s,%s,%.2f,%tD" />
			</bean>
		</property>
		
		<!-- <property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
                    Extractor which returns the value of beans property through reflection
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="id, date, impression,clicks,earning" />
                    </bean>
                </property>
			</bean>
		</property> -->
	</bean>
	
</beans>