<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2011 Michael R. Lange <michael.r.lange@langmi.de>.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Rename File Example
        
        Creates output file name at runtime in relation to business data from e.g. the item reader.
        Constructs the name with an item from the input source.
        Renaming happens in an after (tasklet)step.
    </description>
    <!-- 
        inline xmlns, otherwise it would look like 
        'batch:job, batch:step, etc.' 
    -->
    <job id="renameFileSimpleJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="businessStep" next="renameFileStep">
            <tasklet>
                <chunk 
                    reader="itemReader" 
                    writer="itemWriter" 
                    commit-interval="5">
                    <!-- item reader registered as stream to open the in-memory 
                         test-data-list and read with iterator.next()
                         
                         streams are automatically registered as listeners too -->
                    <streams>
                        <stream ref="itemReader" />
                    </streams>
                    <listeners>
                        <listener ref="promotionListener"/>
                    </listeners>
                </chunk>
            </tasklet>
        </step>
        <step id="renameFileStep">
            <tasklet ref="renameFileTasklet"/>
        </step>        
    </job>

    <bean id="itemReader" class="de.langmi.spring.batch.examples.complex.file.renamefile.simple.SimpleItemReader" />

    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="#{jobParameters['output.file']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
        </property>
    </bean>

    <bean id="promotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <description>
            Promotes the value of stepExecution.key 'desired.output.file' to the 
            JobExecutionContext under the same key.
        </description>
        <property name="keys" value="desired.output.file"/>
    </bean>
    
    <bean id="renameFileTasklet" class="de.langmi.spring.batch.examples.complex.file.renamefile.simple.SimpleRenameFileTaskletStep" />    
    
</beans>
