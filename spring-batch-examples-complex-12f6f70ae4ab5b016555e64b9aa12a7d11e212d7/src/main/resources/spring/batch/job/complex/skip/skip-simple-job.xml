<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2011 Michael R. Lange <michael.r.lange@langmi.de>.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>
        Simple Skip Job Example - with "normal" skip configuration,
                                  skip-limit and skippable-exception-classes
    </description>
    <!-- 
        inline xmlns, otherwise it would look like 
        'batch:job, batch:step, etc.' 
    -->
    <job id="skipJob" xmlns="http://www.springframework.org/schema/batch" restartable="true">
        <step id="skipJobStep">
            <tasklet>
                <chunk 
                    reader="itemReader" 
                    processor="itemProcessor"
                    writer="itemWriter" 
                    commit-interval="5"
                    skip-limit="4">
                    <skippable-exception-classes>
                        <include class="de.langmi.spring.batch.examples.complex.skip.simple.SkipJobCustomException"/>
                    </skippable-exception-classes>
                </chunk>
            </tasklet>
            <listeners>
                <listener ref="jobListener" />
            </listeners>
        </step>
        <!-- registered at job level as well, to log job events -->
        <listeners>
            <listener ref="jobListener" />
        </listeners>
    </job>

    <bean id="itemReader" class="org.springframework.batch.item.support.IteratorItemReader">
        <constructor-arg>
            <ref bean="testData" />
        </constructor-arg>
    </bean>

    <bean id="testData" class="de.langmi.spring.batch.examples.complex.support.TestDataStringsFactoryBean" />
    
    <bean id="itemProcessor" class="de.langmi.spring.batch.examples.complex.skip.simple.SkipJobItemProcessor" />

    <bean id="itemWriter" class="de.langmi.spring.batch.examples.complex.skip.simple.SkipJobItemWriter" />

    <bean id="jobListener" class="de.langmi.spring.batch.examples.complex.skip.simple.SkipJobListener" />

</beans>
